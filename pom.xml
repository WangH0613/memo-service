<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>cn.com.koriesh</groupId>
	<artifactId>memo-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>memo-service</name>
	<description>memo-service</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.10.RELEASE</version>
		<relativePath/>
	</parent>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.SR4</spring-cloud.version>
<!--		<mysql-connector.version>5.1.49</mysql-connector.version>-->
		<commons-lang3.version>3.11</commons-lang3.version>
		<shiro.version>1.3.2</shiro.version>
		<mybatis-starter.version>2.1.3</mybatis-starter.version>
		<pagehelper-starter.version>1.2.5</pagehelper-starter.version>
<!--		<druid-starter.version>1.1.10</druid-starter.version>-->
		<fastjson.version>1.2.51</fastjson.version>
		<gson.version>2.8.6</gson.version>
		<io-jsonwebtoken.version>0.9.1</io-jsonwebtoken.version>
		<maven.plugin>1.3.6</maven.plugin>
		<org.apache.poi.version>4.1.0</org.apache.poi.version>
		<okhttp.version>3.3.0</okhttp.version>
		<HikariCP.version>3.4.5</HikariCP.version>
		<jasypt.version>3.0.3</jasypt.version>
		<druid-starter.version>1.2.6</druid-starter.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.thoughtworks.xstream</groupId>
					<artifactId>xstream</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.4.17</version>
		</dependency>

		<dependency> <groupId>de.codecentric</groupId>
			<artifactId>spring-boot-admin-starter-client</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
			<version>2.2.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>2.2.10.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>2.2.10.RELEASE</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis-starter.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.16</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-all</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
			<version>1.18.12</version>
		</dependency>
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper-spring-boot-starter</artifactId>
			<version>${pagehelper-starter.version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${druid-starter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>com.alibaba</groupId>-->
<!--			<artifactId>fastjson</artifactId>-->
<!--			<version>${fastjson.version}</version>-->
<!--		</dependency>-->
		<!-- 引入Gson 替换 阿里的 fastJson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency>
		<!-- redis插件 暂无用 -->
		<!--		<dependency>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-starter-data-redis</artifactId>-->
		<!--		</dependency>-->
		<!-- 集群定时插件 暂无用 -->
		<!--		<dependency>-->
		<!--			<groupId>org.springframework.boot</groupId>-->
		<!--			<artifactId>spring-boot-starter-quartz</artifactId>-->
		<!--		</dependency>-->
		<!--		<dependency>-->
		<!--			<groupId>net.minidev</groupId>-->
		<!--			<artifactId>json-smart</artifactId>-->
		<!--		</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>${io-jsonwebtoken.version}</version>
		</dependency>
		<!--		读取excel 引入POI-->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>${org.apache.poi.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${org.apache.poi.version}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>${okhttp.version}</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>com.zaxxer</groupId>-->
<!--			<artifactId>HikariCP</artifactId>-->
<!--			<version>${HikariCP.version}</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
			<version>${jasypt.version}</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<profiles.active>dev</profiles.active>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<profiles.active>test</profiles.active>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<profiles.active>prod</profiles.active>
			</properties>
		</profile>
		<profile>
			<id>ptest-ccb</id>
			<properties>
				<profiles.active>ptest-ccb</profiles.active>
			</properties>
		</profile>
		<profile>
			<id>ptest-vt</id>
			<properties>
				<profiles.active>ptest-vt</profiles.active>
			</properties>
		</profile>
		<profile>
			<id>ptest-hx</id>
			<properties>
				<profiles.active>ptest-hx</profiles.active>
			</properties>
		</profile>
	</profiles>

	<build>
<!--		开发版本jar包名称-->
		<finalName>memo-service-SNAPSHOT</finalName>
<!--		上线版本jar包名称-->
<!--		<finalName>memo-service-210709-RELEASE</finalName>-->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>config/application.yml</include>
					<include>config/application-${profiles.active}.yml</include>
					<include>mapper/*.xml</include>
					<include>*.xml</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<delimiters>
						<delimiter>@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>
<!--			单元测试忽略错误-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>org.mybatis.generator</groupId>-->
<!--				<artifactId>mybatis-generator-maven-plugin</artifactId>-->
<!--				<version>${maven.plugin}</version>-->
<!--				<configuration>-->
<!--					&lt;!&ndash; 配置文件的位置 &ndash;&gt;-->
<!--					<configurationFile>generatorConfig.xml</configurationFile>-->
<!--					<verbose>true</verbose>-->
<!--					<overwrite>true</overwrite>-->
<!--				</configuration>-->
<!--			</plugin>-->
<!--			<plugin>-->
<!--				<groupId>org.codehaus.mojo</groupId>-->
<!--				<artifactId>findbugs-maven-plugin</artifactId>-->
<!--				<version>3.0.5</version>-->
<!--				<configuration>-->
<!--					&lt;!&ndash; 设置分析工作的等级，可以为Min、Default和Max &ndash;&gt;-->
<!--					<effort>Low</effort>-->
<!--					&lt;!&ndash; Low、Medium和High (Low最严格) High只扫描严重错误。建议用Medium&ndash;&gt;-->
<!--					<threshold>Medium</threshold>-->
<!--					<failOnError>true</failOnError>-->
<!--					<includeTests>true</includeTests>-->
<!--				</configuration>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>run-findbugs</id>-->
<!--						&lt;!&ndash; 在package(也可设为compile) 阶段触发执行findbugs检查，比如执行 mvn clean package &ndash;&gt;-->
<!--						<phase>package</phase>-->
<!--						<goals>-->
<!--							<goal>check</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
		</plugins>
	</build>

</project>
